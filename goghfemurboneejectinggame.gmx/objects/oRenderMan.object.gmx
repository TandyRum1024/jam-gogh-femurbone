<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rendering handler
// Vertex format for rendering
vertex_format_begin();
vertex_format_add_position_3d();
vertex_format_add_textcoord();
vertex_format_add_color();
vertFormat = vertex_format_end();

// Vertex buffer for storing billobards mesh data
vertBufferBillboards = vertex_create_buffer();

// Request : List of vertex buffers to draw
requestVBs = ds_list_create();

// Request : List of billboards requested to draw
requestBillboards = ds_list_create();

// Sprite texture provided by gamejam
textureTiles = sprite_get_texture(sprTexture, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear list of draw requests
ds_list_clear(requestVBs);
ds_list_clear(requestBillboards);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw list of vertex buffers
for (var i=0; i&lt;ds_list_size(requestVBs); i++)
{
    var _vb = requestVBs[| i];
    if (true) // (buffer_exists(_vb))
    {
        vertex_submit(_vb, pr_trianglelist, textureTiles);
    }
    else
    {
        debug_trace("RenderMan ] VB [", _vb , "] not exists..");
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw list of billboards requested
vertex_begin(vertBufferBillboards, vertFormat);
var _texeltileunit = GFX_TILE_SIZE / 128;
for (var i=0; i&lt;ds_list_size(requestBillboards); i++)
{
    var _bb = requestBillboards[| i];
    var _bbtile = global.TILE_INFO[@ _bb[@ 5]];
    var _u1 = _bbtile[@ 1] / 128, _v1 = _bbtile[@ 2] / 128;
    var _u2 = _u1 + _texeltileunit, _v2 = _v1 + _texeltileunit;
    vb_add_billboard(vertBufferBillboards, _bb[@ 0], _bb[@ 1], _bb[@ 2], _bb[@ 3], _bb[@ 4], _u1, _v1, _u2, _v2, _bb[@ 6], _bb[@ 7]);
}
vertex_end(vertBufferBillboards);

// submit vertex buffer
vertex_submit(vertBufferBillboards, pr_trianglelist, textureTiles);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
