<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player object
// FSM
fsm_init();
fsm_add_state("normal", state_plr_normal);
fsm_add_state("hurt", state_plr_hurt);
fsm_add_state("dead", state_plr_dead);
fsm_set_state("normal");

// Attributes
hp      = 10;
hpMax   = 10;

// Controls
inputBindL = ord('A');
inputBindR = ord('D');
inputBindU = ord('W');
inputBindD = ord('S');
inputBindAttack = mb_left;
inputBindUse    = mb_right;

// Inputs
inputH      = 0; // -1 : left, 1 : right
inputHPress = 0; // -1 : left, 1 : right
inputV      = 0; // -1 : up, 1 : down
inputVPress = 0; // -1 : up, 1 : down
inputAttack      = false; // attack input
inputAttackPress = false;
inputUse        = false; // use input
inputUsePress   = false;

// Physics
height = oGamevars.metaPlayerHeight;
mv_init();
velDamp = 0.9; // dampening of player velocity

// (mask)
mask_index = maskEntity;

// (look)
lookEnabled     = true;
lookDir         = 0; // direction that player is looking at
lookSensitivity = 360 / 1600; // mouse sensitivity (one 360deg turn per 1600px of mouse movement)

// (movement)
moveVelAccel    = 0.1; // movement acceleration
moveVelMax      = 0.5; // maximum movement velocity
moveVelStepAccel    = 0.6; // acceleration applied on each 'step'
moveVelStepMax      = 1.0; // maximum velocity achieveable w/ step
moveCtr = 0; // movement counter (incremented while moving)

// Viewmodel
viewmodel = instance_create(0, 0, oViewmodel);
viewmodel.owner = id;

// Weapon
weapon = instance_create(0, 0, oWeapon);
weapon.owner = id;

// Interaction
// (door)
interactDoorUsed = false;
interactInstDoor = noone;

interactWeaponPickupUsed = false;
interactInstWeaponPickup = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy FSM
fsm_destroy();
// Destroy weapon
instance_destroy(weapon);
// Destroy viewmodel
instance_destroy(viewmodel);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update player
if (global.gamePaused)
    exit;

fsm_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw weapon range
/*
if (fsmStateCurrent != "dead" &amp;&amp; weapon.fsmStateCurrent == "melee_windup")
{
    d3d_transform_set_translation(0, 0, 0.1);
    var _attackdist = weapon.attackdist;
    var _size = (1 / GFX_TILE_SIZE) * _attackdist * 2;
    draw_sprite_ext(sprTiles, 23, x - _attackdist, y - _attackdist, _size, _size, 0, c_yellow, 1.0);
    d3d_transform_set_identity();
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
